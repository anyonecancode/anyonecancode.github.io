{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["IndexPage","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","allMarkdownRemark","edges","map","_ref","node","key","id","className","to","frontmatter","path","date","blurb","_public_static_d_2108554831_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","react_default","gatsby_browser_entry","Fragment","site","siteMetadata","description","_579592196","Footer","href","withPrefix","Layout","header","footer","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-a179be4fcfdd4bcbc842.js","sourcesContent":["import React from 'react'\nimport { Link, StaticQuery, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst IndexPage = data => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n          edges {\n            node {\n              id\n              frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                path\n                blurb\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Layout>\n        <SEO\n          title=\"Home\"\n          keywords={[`blog`, `software`, `schweiger`, `anyonecancode`]}\n        />\n        {data.allMarkdownRemark.edges.map(({ node }) => {\n          return (\n            <article key={node.id} className=\"listing\">\n              <h3>\n                <Link to={node.frontmatter.path}>{node.frontmatter.title}</Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p>{node.frontmatter.blurb}</p>\n            </article>\n          )\n        })}\n      </Layout>\n    )}\n  />\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst Header = () => (\n  <StaticQuery\n    query={graphql`\n      query SiteMetaDataQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <header id=\"siteheader\">\n          <h1>\n            <Link to=\"/\">{data.site.siteMetadata.title}</Link>\n          </h1>\n          <h2>{data.site.siteMetadata.description}</h2>\n        </header>\n      </>\n    )}\n  />\n)\n\nexport default Header\n","import React from 'react'\nimport { withPrefix } from 'gatsby'\nimport { Link } from 'gatsby'\n\nconst Footer = () => (\n  <footer>\n    <p>\n      Philip Schweiger&rsquo;s web site, built with{' '}\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a> and hosted on{' '}\n      <a href=\"http://github.com/anyonecancode/anyonecancode.github.io\">\n        Github\n      </a>\n      .\n    </p>\n\n    <p>\n      You can reach me via{' '}\n      <a href=\"https://www.linkedin.com/in/philipschweiger/\">LinkedIn</a> or at\n      the email on my{' '}\n      <a href={withPrefix('/files/schweiger_resume.pdf')}>resume</a>.\n    </p>\n\n    <p className=\"hidden\">\n      Looking for more on this site? Browse all my{' '}\n      <Link to=\"/posts\">posts</Link>, or maybe just the post where I talk a bit{' '}\n      <Link to=\"/posts/about\">about</Link> myself or explain my{' '}\n      <Link to=\"/posts/anyonecancode\">user name</Link>.\n    </p>\n  </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './header'\nimport Footer from './footer'\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n    <main>{children}</main>\n    <Footer />\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}